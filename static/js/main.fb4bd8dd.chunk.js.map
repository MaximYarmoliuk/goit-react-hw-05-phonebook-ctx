{"version":3,"sources":["components/ContactForm/ContactForm.module.css","contexts/ThemeContext/ThemeContext.js","hoc/withTheme.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ThemeSelector/ThemeSelector.js","components/App.js","index.js","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ThemeSelector/ThemeSelector.module.css"],"names":["module","exports","Context","createContext","ThemeContext","toggleTheme","setState","type","state","themeConfig","light","headerBg","fontColor","bodybg","dark","Provider","value","this","props","children","Component","Consumer","withTheme","WrappedComponent","theme","name","number","handleSubmit","e","preventDefault","addContact","handleChange","target","style","color","background","className","styles","contactForm","onSubmit","contactLabel","contactInput","onChange","contactSubmit","ContactListItem","onRemoveContact","item","button","onClick","contacts","map","id","key","onChangeFilter","label","input","center","checkbox","checked","App","filter","checkOnExist","find","contact","checkLength","string","length","uuid","alert","prevState","removeContact","contactId","changeFilter","getFilteredContacts","toLowerCase","includes","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","document","querySelector"],"mappings":"yIACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,aAAe,kCAAkC,aAAe,kCAAkC,cAAgB,qC,2KCC7KC,EAAUC,0BAEKC,E,2MAGnBC,YAAc,WACZ,EAAKC,SAAS,CACZC,KAA0B,SAApB,EAAKC,MAAMD,KAAkB,QAAU,U,EAIjDC,MAAQ,CACND,KAAM,QACNE,YAAa,CACXC,MAAO,CACLC,SAAU,UACVC,UAAW,QACXC,OAAQ,SAEVC,KAAM,CACJH,SAAU,UACVC,UAAW,QACXC,OAAQ,UAGZR,YAAa,EAAKA,a,wEAIlB,OACE,kBAACH,EAAQa,SAAT,CACEC,MAAQC,KAAKT,OAMZS,KAAKC,MAAMC,c,GAnCsBC,aAArBhB,EACZiB,SAAWnB,EAAQmB,SCF5B,IAeeC,EAfG,SAAAC,GAChB,OAAO,SAAmBL,GACxB,OACE,kBAAC,EAAaG,SAAd,MACG,SAAAG,GAAK,OACJ,kBAACD,EAAD,iBACML,EADN,CAEEM,MAAOA,U,gBC4DJF,I,2MAjEbd,MAAQ,CACNiB,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GAAM,IAAD,EACO,EAAKpB,MAAtBiB,EADU,EACVA,KAAMC,EADI,EACJA,OACdE,EAAEC,iBAEF,EAAKX,MAAMY,WAAW,CAAEL,OAAMC,WAE9B,EAAKpB,SAAS,CAAEmB,KAAM,GAAIC,OAAQ,M,EAGpCK,aAAe,SAAAH,GAAM,IAAD,EACMA,EAAEI,OAAlBP,EADU,EACVA,KAAMT,EADI,EACJA,MACd,EAAKV,SAAL,eACGmB,EAAOT,K,wEAIF,IAAD,EACuBC,KAAKC,MAAMM,MAAjCf,EADD,EACCA,YAAaF,EADd,EACcA,KAErB,OACE,yBACE0B,MAAO,CACLC,MAAOzB,EAAYF,GAAMK,UACzBuB,WAAY1B,EAAYF,GAAMM,SAGhC,yCAEA,0BAAMuB,UAAWC,IAAOC,YAAaC,SAAUtB,KAAKU,cAClD,2BAAOS,UAAWC,IAAOG,cAAzB,OAEE,2BACEJ,UAAWC,IAAOI,aAClBlC,KAAK,OACLS,MAAOC,KAAKT,MAAMiB,KAClBA,KAAK,OACLiB,SAAUzB,KAAKc,gBAInB,2BAAOK,UAAWC,IAAOG,cAAzB,SAEE,2BACEJ,UAAWC,IAAOI,aAClBlC,KAAK,SACLS,MAAOC,KAAKT,MAAMkB,OAClBD,KAAK,SACLiB,SAAUzB,KAAKc,gBAInB,4BAAQK,UAAWC,IAAOM,cAAepC,KAAK,UAA9C,qB,GAzDgBa,c,gBCmBXwB,EAnBS,SAAC,GAAuC,IAArCnB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQmB,EAAsB,EAAtBA,gBACvC,OACE,wBAAIT,UAAWC,IAAOS,MACpB,uBAAGV,UAAU,iBACVX,EADH,KACWC,GAEX,4BAAQU,UAAWC,IAAOU,OAAQxC,KAAK,SAASyC,QAASH,GAAzD,YC+BSvB,KApCK,SAAC,GAA0C,IAAxC2B,EAAuC,EAAvCA,SAAUJ,EAA6B,EAA7BA,gBAAiBrB,EAAY,EAAZA,MACxCf,EAAsBe,EAAtBf,YAAaF,EAASiB,EAATjB,KAErB,OACE,yBACE0B,MAAO,CACLC,MAAOzB,EAAYF,GAAMK,UACzBuB,WAAY1B,EAAYF,GAAMM,SAGhC,wCACA,wBAAIuB,UAAU,WACXa,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAI1B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,kBAAC,EAAD,CACE0B,IAAKD,EACL1B,KAAMA,EACNC,OAAQA,EACRmB,gBAAiB,kBAAMA,EAAgBM,c,gBCWpC7B,SA5Bf,YAAmD,IAAjCN,EAAgC,EAAhCA,MAAOqC,EAAyB,EAAzBA,eAAgB7B,EAAS,EAATA,MAC/Bf,EAAsBe,EAAtBf,YAAaF,EAASiB,EAATjB,KAErB,OACE,yBACE0B,MAAO,CACLC,MAAOzB,EAAYF,GAAMK,UACzBuB,WAAY1B,EAAYF,GAAMM,SAGhC,2BAAOuB,UAAWC,IAAOiB,OAAzB,wBAEE,2BACE/C,KAAK,OACL6B,UAAWC,IAAOkB,MAClBvC,MAAOA,EACP0B,SAAU,SAAAd,GAAC,OAAIyB,EAAezB,EAAEI,OAAOhB,e,gBCHlCM,KAdO,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACvB,OACE,yBAAKY,UAAWC,IAAOmB,QACrB,0BAAMpB,UAAU,SAASZ,EAAMjB,MAC/B,2BACEA,KAAK,WACL6B,UAAWC,IAAOoB,SAClBC,QAAwB,SAAflC,EAAMjB,KACfmC,SAAU,kBAAMlB,EAAMnB,qBCJTsD,E,2MACnBnD,MAAQ,CACNyC,SAAU,GACVW,OAAQ,I,EAkBV9B,WAAa,YAAuB,IAApBL,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACdmC,EAAe,EAAKrD,MAAMyC,SAASa,MACvC,SAAAC,GAAO,OAAIA,EAAQtC,OAASA,KAGxBuC,EAAc,SAAAC,GAAM,OAAIA,EAAOC,OAAS,GACxCH,EAAU,CACdZ,GAAIgB,iBACJ1C,OACAC,UAGEsC,EAAY,GAAD,OAAIvC,KAAWuC,EAAY,GAAD,OAAItC,IAC3C0C,MAAM,6CAIJP,EACFO,MAAM,GAAD,OAAI3C,EAAJ,4BAIP,EAAKnB,UAAS,SAAA+D,GACZ,MAAO,CACLpB,SAAS,GAAD,mBAAMoB,EAAUpB,UAAhB,CAA0Bc,S,EAKxCO,cAAgB,SAAAC,GACd,EAAKjE,UAAS,SAAA+D,GACZ,MAAO,CACLpB,SAAUoB,EAAUpB,SAASW,QAAO,qBAAGT,KAAgBoB,U,EAK7DC,aAAe,SAAAZ,GACb,EAAKtD,SAAS,CAAEsD,Y,EAGlBa,oBAAsB,WAAO,IAAD,EACG,EAAKjE,MAA1ByC,EADkB,EAClBA,SAAUW,EADQ,EACRA,OAClB,OAAOX,EAASW,QAAO,SAAAG,GAAO,OAC5BA,EAAQtC,KAAKiD,cAAcC,SAASf,EAAOc,mB,mFA1D7C,IAAME,EAAoBC,aAAaC,QAAQ,YAC3CF,GACF3D,KAAKX,SAAS,CACZ2C,SAAU8B,KAAKC,MAAMJ,O,yCAKRK,EAAWZ,GACxBA,EAAUpB,WAAahC,KAAKT,MAAMyC,UACpC4B,aAAaK,QAAQ,WAAYH,KAAKI,UAAUlE,KAAKT,MAAMyC,a,+BAoDrD,IAAD,EACsBhC,KAAKT,MAA1BoD,EADD,EACCA,OAAQX,EADT,EACSA,SACVmC,EAAmBnE,KAAKwD,sBAE9B,OACE,kBAAC,EAAD,KACE,6BACE,kBAAC,EAAD,CAAepE,YAAaY,KAAKZ,cAEjC,kBAAC,EAAD,CAAayB,WAAYb,KAAKa,aAE7BmB,EAASiB,QAAU,GAClB,kBAAC,EAAD,CAAQlD,MAAO4C,EAAQP,eAAgBpC,KAAKuD,eAG9C,kBAAC,EAAD,CACEvB,SAAUmC,EACVvC,gBAAiB5B,KAAKqD,sB,GAtFDlD,aCHjCiE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W,kBCJhDxF,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,kBCAhED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,kBCAxDD,EAAOC,QAAU,CAAC,SAAW,mC","file":"static/js/main.fb4bd8dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3zi3Q\",\"contactLabel\":\"ContactForm_contactLabel__3juJi\",\"contactInput\":\"ContactForm_contactInput__1gCRp\",\"contactSubmit\":\"ContactForm_contactSubmit__3tI7G\"};","import React, { Component, createContext } from \"react\";\r\n\r\nconst Context = createContext();\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme = () => {\r\n    this.setState({\r\n      type: this.state.type === \"dark\" ? \"light\" : \"dark\"\r\n    });\r\n  };\r\n\r\n  state = {\r\n    type: \"light\",\r\n    themeConfig: {\r\n      light: {\r\n        headerBg: \"#F7B30C\",\r\n        fontColor: \"black\",\r\n        bodybg: \"white\"\r\n      },\r\n      dark: {\r\n        headerBg: \"#3c3c3c\",\r\n        fontColor: \"white\",\r\n        bodybg: \"black\"\r\n      }\r\n    },\r\n    toggleTheme: this.toggleTheme\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider\r\n        value={ this.state\r\n          // type: this.state.theme,\r\n          // config: this.state.themeConfig[this.state.theme],\r\n          // onToggleTheme: this.toggleTheme\r\n        }\r\n      >\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ThemeContext from \"../contexts/ThemeContext/ThemeContext\";\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function WithTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <WrappedComponent\r\n            {...props}\r\n            theme={theme}\r\n          />\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import React, { Component } from \"react\";\r\nimport withTheme from \"../../hoc/withTheme\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    this.props.addContact({ name, number });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { themeConfig, type } = this.props.theme;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          color: themeConfig[type].fontColor,\r\n          background: themeConfig[type].bodybg\r\n        }}\r\n      >\r\n        <h2>Phonebook</h2>\r\n\r\n        <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n          <label className={styles.contactLabel}>\r\n            Name\r\n            <input\r\n              className={styles.contactInput}\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.contactLabel}>\r\n            Number\r\n            <input\r\n              className={styles.contactInput}\r\n              type=\"number\"\r\n              value={this.state.number}\r\n              name=\"number\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.contactSubmit} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(ContactForm);\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\"\r\n\r\nconst ContactListItem = ({ name, number, onRemoveContact }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className=\"TaskList-text\">\r\n        {name}: {number}\r\n      </p>\r\n      <button className={styles.button} type=\"button\" onClick={onRemoveContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  number: propTypes.string.isRequired,\r\n  onRemoveContact: propTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport withTheme from \"../../hoc/withTheme\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact, theme }) => {\r\n  const { themeConfig, type } = theme;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        color: themeConfig[type].fontColor,\r\n        background: themeConfig[type].bodybg\r\n      }}\r\n    >\r\n      <h2>Contacts</h2>\r\n      <ul className=\"Contact\">\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onRemoveContact={() => onRemoveContact(id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: propTypes.arrayOf(\r\n    propTypes.exact({\r\n      id: propTypes.string.isRequired,\r\n      name: propTypes.string.isRequired,\r\n      number: propTypes.string.isRequired\r\n    })\r\n  ),\r\n  onRemoveContact: propTypes.func.isRequired\r\n};\r\n\r\nexport default withTheme(ContactList);\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport withTheme from \"../../hoc/withTheme\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, onChangeFilter, theme }) {\r\n  const { themeConfig, type } = theme;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        color: themeConfig[type].fontColor,\r\n        background: themeConfig[type].bodybg\r\n      }}\r\n    >\r\n      <label className={styles.label}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          className={styles.input}\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: propTypes.string.isRequired,\r\n  onChangeFilter: propTypes.func.isRequired\r\n};\r\n\r\nexport default withTheme(Filter);\r\n","import React from \"react\";\r\nimport styles from \"./ThemeSelector.module.css\";\r\nimport withTheme from \"../../hoc/withTheme\";\r\n\r\nconst ThemeSelector = ({ theme }) => {\r\n  return (\r\n    <div className={styles.center}>\r\n      <span className=\"label\">{theme.type}</span>\r\n      <input\r\n        type=\"checkbox\"\r\n        className={styles.checkbox}\r\n        checked={theme.type === \"dark\"}\r\n        onChange={() => theme.toggleTheme()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(ThemeSelector);\r\n","import React, { Component } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ThemeSelector from \"./ThemeSelector/ThemeSelector\";\r\nimport ThemeContext from \"../contexts/ThemeContext/ThemeContext\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const persistedContacts = localStorage.getItem(\"contacts\");\r\n    if (persistedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(persistedContacts)\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = ({ name, number }) => {\r\n    const checkOnExist = this.state.contacts.find(\r\n      contact => contact.name === name\r\n    );\r\n\r\n    const checkLength = string => string.length < 1;\r\n    const contact = {\r\n      id: uuid(),\r\n      name,\r\n      number\r\n    };\r\n\r\n    if (checkLength(`${name}`) || checkLength(`${number}`)) {\r\n      alert(\"Please, fill in all required entry fields\");\r\n      return;\r\n    }\r\n\r\n    if (checkOnExist) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact]\r\n      };\r\n    });\r\n  };\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId)\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <ThemeContext>\r\n        <div>\r\n          <ThemeSelector toggleTheme={this.toggleTheme} />\r\n          \r\n          <ContactForm addContact={this.addContact} />\r\n          \r\n          {contacts.length >= 2 && (\r\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n          )}\r\n\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            onRemoveContact={this.removeContact}\r\n          />\r\n        </div>\r\n      </ThemeContext>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__3mAZb\",\"button\":\"ContactListItem_button__23NNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__18QsO\",\"input\":\"Filter_input__txeK6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"ThemeSelector_checkbox__2dVYK\"};"],"sourceRoot":""}