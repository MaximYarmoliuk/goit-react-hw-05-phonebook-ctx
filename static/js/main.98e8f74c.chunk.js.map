{"version":3,"sources":["components/ContactForm/ContactForm.module.css","contexts/ThemeContext/ThemeContext.js","hoc/withTheme.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ThemeSelector/ThemeSelector.js","components/App.js","index.js","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ThemeSelector/ThemeSelector.module.css"],"names":["module","exports","themeConfig","light","headerBg","fontColor","bodybg","dark","ThemeContext","React","createContext","withTheme","WrappedComponent","props","Consumer","theme","style","color","config","background","state","name","number","handleSubmit","e","preventDefault","addContact","setState","handleChange","target","value","className","styles","contactForm","onSubmit","this","contactLabel","contactInput","type","onChange","contactSubmit","Component","ContactListItem","onRemoveContact","item","button","onClick","contacts","map","id","key","onChangeFilter","label","input","ThemeSelector","toggleTheme","center","checkbox","checked","App","filter","checkOnExist","find","contact","checkLength","string","length","uuid","alert","prevState","removeContact","contactId","changeFilter","getFilteredContacts","toLowerCase","includes","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","Provider","ReactDOM","render","document","querySelector"],"mappings":"yIACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,aAAe,kCAAkC,aAAe,kCAAkC,cAAgB,qC,2KCCtKC,EAAc,CACzBC,MAAO,CACLC,SAAU,UACVC,UAAW,QACXC,OAAQ,SAEVC,KAAM,CACJH,SAAU,UACVC,UAAW,QACXC,OAAQ,UAMGE,EAFMC,IAAMC,cAAcR,EAAYC,OCFtCQ,EAVG,SAAAC,GAChB,OAAO,SAAmBC,GACxB,OACE,kBAAC,EAAaC,SAAd,MACG,SAAAC,GAAK,OAAI,kBAACH,EAAD,iBAAsBC,EAAtB,CAA6BG,MAAO,CAACC,MAAOF,EAAMG,OAAOb,UAAWc,WAAYJ,EAAMG,OAAOZ,gB,gBCwDhGK,I,2MA1DbS,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GAAM,IAAD,EACO,EAAKJ,MAAtBC,EADU,EACVA,KAAMC,EADI,EACJA,OACdE,EAAEC,iBAEF,EAAKZ,MAAMa,WAAW,CAAEL,OAAMC,WAE9B,EAAKK,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,EAGpCM,aAAe,SAAAJ,GAAM,IAAD,EACMA,EAAEK,OAAlBR,EADU,EACVA,KAAMS,EADI,EACJA,MACd,EAAKH,SAAL,eACGN,EAAOS,K,wEAKV,OACE,0BACEC,UAAWC,IAAOC,YAClBC,SAAUC,KAAKZ,aACfP,MAAOmB,KAAKtB,MAAMG,OAElB,2BAAOe,UAAWC,IAAOI,cAAzB,OAEE,2BACEL,UAAWC,IAAOK,aAClBC,KAAK,OACLR,MAAOK,KAAKf,MAAMC,KAClBA,KAAK,OACLkB,SAAUJ,KAAKP,gBAInB,2BAAOG,UAAWC,IAAOI,cAAzB,SAEE,2BACEL,UAAWC,IAAOK,aAClBC,KAAK,SACLR,MAAOK,KAAKf,MAAME,OAClBD,KAAK,SACLkB,SAAUJ,KAAKP,gBAInB,4BAAQG,UAAWC,IAAOQ,cAAeF,KAAK,UAA9C,oB,GAnDkBG,c,gBCmBXC,EAnBS,SAAC,GAAuC,IAArCrB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQqB,EAAsB,EAAtBA,gBACvC,OACE,wBAAIZ,UAAWC,IAAOY,MACpB,uBAAGb,UAAU,iBACVV,EADH,KACWC,GAEX,4BAAQS,UAAWC,IAAOa,OAAQP,KAAK,SAASQ,QAASH,GAAzD,YCiBShC,KAtBK,SAAC,GAAD,IAAEoC,EAAF,EAAEA,SAAUJ,EAAZ,EAAYA,gBAAiB3B,EAA7B,EAA6BA,MAA7B,OAClB,wBAAIe,UAAU,UAAUf,MAAOA,GAC5B+B,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAI5B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,kBAAC,EAAD,CACE4B,IAAKD,EACL5B,KAAMA,EACNC,OAAQA,EACRqB,gBAAiB,kBAAIA,EAAgBM,a,gBCc9BtC,SArBf,YAAmD,IAAjCmB,EAAgC,EAAhCA,MAAOqB,EAAyB,EAAzBA,eAAgBnC,EAAS,EAATA,MACvC,OACE,yBAAKA,MAAOA,GACV,2BAAOe,UAAWC,IAAOoB,OAAzB,wBAEE,2BACEd,KAAK,OACLP,UAAWC,IAAOqB,MAClBvB,MAAOA,EACPS,SAAU,SAAAf,GAAC,OAAI2B,EAAe3B,EAAEK,OAAOC,e,gBCVlC,SAASwB,EAAT,GAAyC,IAAhBC,EAAe,EAAfA,YACtC,OACE,kBAAC,EAAazC,SAAd,MACG,SAAAC,GAAK,OACJ,yBAAKgB,UAAWC,IAAOwB,QACrB,0BAAMzB,UAAU,SAAShB,EAAMuB,MAC/B,2BACEA,KAAK,WACLP,UAAWC,IAAOyB,SAClBC,QAAwB,SAAf3C,EAAMuB,KACfC,SAAU,kBAAMgB,W,ICLPI,E,2MACnBvC,MAAQ,CACN2B,SAAU,GACVa,OAAQ,GACR7C,MAAO,S,EAkBTwC,YAAc,WACZ,EAAK5B,SAAS,CACZZ,MAA4B,SAArB,EAAKK,MAAML,MAAmB,QAAU,U,EAInDW,WAAa,YAAuB,IAApBL,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACduC,EAAe,EAAKzC,MAAM2B,SAASe,MACvC,SAAAC,GAAO,OAAIA,EAAQ1C,OAASA,KAGxB2C,EAAc,SAAAC,GAAM,OAAIA,EAAOC,OAAS,GACxCH,EAAU,CACdd,GAAIkB,iBACJ9C,OACAC,UAGE0C,EAAY,GAAD,OAAI3C,KAAW2C,EAAY,GAAD,OAAI1C,IAC3C8C,MAAM,6CAIJP,EACFO,MAAM,GAAD,OAAI/C,EAAJ,4BAIP,EAAKM,UAAS,SAAA0C,GACZ,MAAO,CACLtB,SAAS,GAAD,mBAAMsB,EAAUtB,UAAhB,CAA0BgB,S,EAKxCO,cAAgB,SAAAC,GACd,EAAK5C,UAAS,SAAA0C,GACZ,MAAO,CACLtB,SAAUsB,EAAUtB,SAASa,QAAO,qBAAGX,KAAgBsB,U,EAK7DC,aAAe,SAAAZ,GACb,EAAKjC,SAAS,CAAEiC,Y,EAGlBa,oBAAsB,WAAO,IAAD,EACG,EAAKrD,MAA1B2B,EADkB,EAClBA,SAAUa,EADQ,EACRA,OAClB,OAAOb,EAASa,QAAO,SAAAG,GAAO,OAC5BA,EAAQ1C,KAAKqD,cAAcC,SAASf,EAAOc,mB,mFAhE7C,IAAME,EAAoBC,aAAaC,QAAQ,YAC3CF,GACFzC,KAAKR,SAAS,CACZoB,SAAUgC,KAAKC,MAAMJ,O,yCAKRK,EAAWZ,GACxBA,EAAUtB,WAAaZ,KAAKf,MAAM2B,UACpC8B,aAAaK,QAAQ,WAAYH,KAAKI,UAAUhD,KAAKf,MAAM2B,a,+BA0DrD,IAAD,EACsBZ,KAAKf,MAA1BwC,EADD,EACCA,OAAQb,EADT,EACSA,SACVqC,EAAmBjD,KAAKsC,sBAE9B,OACE,kBAAC,EAAaY,SAAd,CACEvD,MAAO,CACLQ,KAAMH,KAAKf,MAAML,MACjBG,OAAQhB,EAAYiC,KAAKf,MAAML,SAGjC,6BACE,kBAACuC,EAAD,CAAeC,YAAapB,KAAKoB,cACjC,yCACA,kBAAC,EAAD,CAAa7B,WAAYS,KAAKT,aAC9B,wCACCqB,EAASmB,QAAU,GAClB,kBAAC,EAAD,CAAQpC,MAAO8B,EAAQT,eAAgBhB,KAAKqC,eAG9C,kBAAC,EAAD,CACEzB,SAAUqC,EACVzC,gBAAiBR,KAAKmC,sB,GAlGD7B,aCJjC6C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W,kBCJhDzF,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,kBCAhED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,kBCAxDD,EAAOC,QAAU,CAAC,SAAW,mC","file":"static/js/main.98e8f74c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3zi3Q\",\"contactLabel\":\"ContactForm_contactLabel__3juJi\",\"contactInput\":\"ContactForm_contactInput__1gCRp\",\"contactSubmit\":\"ContactForm_contactSubmit__3tI7G\"};","import React from \"react\";\r\n\r\nexport const themeConfig = {\r\n  light: {\r\n    headerBg: \"#F7B30C\",\r\n    fontColor: \"black\",\r\n    bodybg: \"white\"\r\n  },\r\n  dark: {\r\n    headerBg: \"#3c3c3c\",\r\n    fontColor: \"white\",\r\n    bodybg: \"black\"\r\n  }\r\n};\r\n\r\nconst ThemeContext = React.createContext(themeConfig.light);\r\n\r\nexport default ThemeContext;\r\n","import React from \"react\";\r\nimport ThemeContext from \"../contexts/ThemeContext/ThemeContext\";\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function WithTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => <WrappedComponent {...props} style={{color: theme.config.fontColor, background: theme.config.bodybg}} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import React, { Component } from \"react\";\r\nimport withTheme from \"../../hoc/withTheme\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    this.props.addContact({ name, number });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className={styles.contactForm}\r\n        onSubmit={this.handleSubmit}\r\n        style={this.props.style}\r\n      >\r\n        <label className={styles.contactLabel}>\r\n          Name\r\n          <input\r\n            className={styles.contactInput}\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.contactLabel}>\r\n          Number\r\n          <input\r\n            className={styles.contactInput}\r\n            type=\"number\"\r\n            value={this.state.number}\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.contactSubmit} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(ContactForm);\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\"\r\n\r\nconst ContactListItem = ({ name, number, onRemoveContact }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className=\"TaskList-text\">\r\n        {name}: {number}\r\n      </p>\r\n      <button className={styles.button} type=\"button\" onClick={onRemoveContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  number: propTypes.string.isRequired,\r\n  onRemoveContact: propTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport withTheme from \"../../hoc/withTheme\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst ContactList = ({contacts, onRemoveContact, style}) => (\r\n  <ul className=\"Contact\" style={style}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        onRemoveContact={()=>onRemoveContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes= {\r\n  contacts: propTypes.arrayOf(propTypes.exact({\r\n    id: propTypes.string.isRequired,\r\n    name: propTypes.string.isRequired,\r\n    number: propTypes.string.isRequired\r\n  })),\r\n  onRemoveContact: propTypes.func.isRequired\r\n}\r\n\r\nexport default withTheme(ContactList);","import React from \"react\";\r\nimport propTypes from \"prop-types\"\r\nimport withTheme from \"../../hoc/withTheme\";\r\nimport styles from \"./Filter.module.css\"\r\n\r\nfunction Filter({ value, onChangeFilter, style }) {\r\n  return (\r\n    <div style={style}>\r\n      <label className={styles.label}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          className={styles.input}\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: propTypes.string.isRequired,\r\n  onChangeFilter: propTypes.func.isRequired\r\n}\r\n\r\nexport default withTheme(Filter)\r\n","import React from \"react\";\r\nimport ThemeContext from \"../../contexts/ThemeContext/ThemeContext\";\r\nimport styles from \"./ThemeSelector.module.css\";\r\n\r\nexport default function ThemeSelector({ toggleTheme }) {\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {theme => (\r\n        <div className={styles.center}>\r\n          <span className=\"label\">{theme.type}</span>\r\n          <input\r\n            type=\"checkbox\"\r\n            className={styles.checkbox}\r\n            checked={theme.type === \"dark\"}\r\n            onChange={() => toggleTheme()}\r\n          />\r\n        </div>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ThemeSelector from \"./ThemeSelector/ThemeSelector\";\r\nimport ThemeContext from \"../contexts/ThemeContext/ThemeContext\";\r\nimport { themeConfig } from \"../contexts/ThemeContext/ThemeContext\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n    theme: \"light\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const persistedContacts = localStorage.getItem(\"contacts\");\r\n    if (persistedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(persistedContacts)\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  toggleTheme = () => {\r\n    this.setState({\r\n      theme: this.state.theme === \"dark\" ? \"light\" : \"dark\"\r\n    });\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const checkOnExist = this.state.contacts.find(\r\n      contact => contact.name === name\r\n    );\r\n\r\n    const checkLength = string => string.length < 1;\r\n    const contact = {\r\n      id: uuid(),\r\n      name,\r\n      number\r\n    };\r\n\r\n    if (checkLength(`${name}`) || checkLength(`${number}`)) {\r\n      alert(\"Please, fill in all required entry fields\");\r\n      return;\r\n    }\r\n\r\n    if (checkOnExist) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact]\r\n      };\r\n    });\r\n  };\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId)\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <ThemeContext.Provider\r\n        value={{\r\n          type: this.state.theme,\r\n          config: themeConfig[this.state.theme]\r\n        }}\r\n      >\r\n        <div>\r\n          <ThemeSelector toggleTheme={this.toggleTheme} />\r\n          <h1>Phonebook</h1>\r\n          <ContactForm addContact={this.addContact} />\r\n          <h2>Contacts</h2>\r\n          {contacts.length >= 2 && (\r\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n          )}\r\n\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            onRemoveContact={this.removeContact}\r\n          />\r\n        </div>\r\n      </ThemeContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__3mAZb\",\"button\":\"ContactListItem_button__23NNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__18QsO\",\"input\":\"Filter_input__txeK6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"ThemeSelector_checkbox__2dVYK\"};"],"sourceRoot":""}